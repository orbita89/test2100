<?php

declare(strict_types=1);

use Codeception\Example;
use Codeception\Util\HttpCode;
use Tests\Support\ApiTester;

class CreateNewEmployeCest
{
    public function createGame(ApiTester $apiTester): void
    {
        $apiTester->wantToTest('Create new game');

        $requestBody = [
            "name" => '',
            "email" => "asadsaadssssa@gmail.com",
            "position" => 'dfdsf',
            "age" => 'asdascasc'

        ];

        $apiTester->sendPostAsJson(
            'add',
            $requestBody
        );


        $apiTester->seeResponseCodeIs(HttpCode::CREATED);
        $apiTester->seeResponseIsJson();
//        $response = json_decode($apiTester->grabResponse(), true);
//
//        // Проверяем тип данных 'age'
//        $apiTester->assertSame('integer', gettype($response['age']));
        print_r($requestBody);
        $apiTester->seeResponseMatchesJsonType(
            [
                'id' => 'integer'
            ]
        );
        $apiTester->dontSeeResponseJsonMatchesJsonType([
            'name' => 'string',
            'email' => 'string',
            'position' => 'string',
            'age' => 'integer:>0'
        ]);
    }

    /** @dataProvider incorrectDataProvider */
    public function createGameWithIncorrectData(ApiTester $apiTester, Example $provider): void
    {
        $apiTester->wantToTest('Create new game with incorrect data');

        $apiTester->sendPostAsJson('add', $provider['requestBody']);

        $apiTester->seeResponseCodeIs(HttpCode::BAD_REQUEST);
    }

    private function incorrectDataProvider(): iterable
    {
        yield [
            'requestBody' => [],
        ];

        yield [
            'requestBody' => '-1'
        ];
        yield [
            'requestBody' => [
                'someField' => 'string', // Неверный тип, ожидается integer
                'anotherField' => 123,
            ],
        ];

        yield [
            'requestBody' => [
                'someField' => 123, // Неверный тип, ожидается string
                'anotherField' => 'text',
            ],
        ];

    }
}




//        $apiTester->seeResponseMatchesJsonType(
//            [
//                'id' => 'integer'
//            ]
//        );